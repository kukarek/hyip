from aiogram import Dispatcher, bot
from aiogram.types import CallbackQuery, Message
import keyboards
import database
from misc.config import MAIN_MESS, CHOOSE_MESS
from misc.utils import generate_hyip_info

async def on_start(message: Message):
    #–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    database.add_user(message.from_id)
    status = database.get_status(message.from_id)
    #–æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ—â–µ–Ω–∏—è —Å –∏–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    mess = await message.answer("ü•≥–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –≤ –Ω–∞—à–µ–º —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–µ!ü•≥\n\n" + MAIN_MESS)
    keyboard = await keyboards.main_keyboard(user_id=message.from_id, message_id=mess.message_id, status=status[0])
    await message.bot.edit_message_reply_markup(chat_id=message.from_id, message_id=mess.message_id, reply_markup=keyboard)

async def actually_hyip_button(query: CallbackQuery):
    
    user_id = int(query.data.split("_")[1]) #–∫—Ç–æ –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É
    message_id = int(query.data.split("_")[2]) #id —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–Ω–æ–ø–∫–æ–π
    
    keyboard = await keyboards.hyip_list_keyboard(action="–ø—Ä–æ—Å–º–æ—Ç—Ä", user_id=user_id, message_id=message_id)

    await query.bot.edit_message_text(text=CHOOSE_MESS, chat_id=user_id, message_id=message_id, reply_markup=keyboard)

async def off_notifications_button(query: CallbackQuery):
    
    user_id = int(query.data.split("_")[1]) #–∫—Ç–æ –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É
    message_id = int(query.data.split("_")[2]) #id —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–Ω–æ–ø–∫–æ–π
    
    database.set_status(user_id=user_id, status="F")

    keyboard = await keyboards.main_keyboard(user_id=user_id, message_id=message_id, status="F")

    await query.bot.edit_message_text(text=MAIN_MESS, chat_id=user_id, message_id=message_id, reply_markup=keyboard)

async def on_notifications_button(query: CallbackQuery):
    
    user_id = int(query.data.split("_")[1]) #–∫—Ç–æ –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É
    message_id = int(query.data.split("_")[2]) #id —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–Ω–æ–ø–∫–æ–π
    
    database.set_status(user_id=user_id, status="T")

    keyboard = await keyboards.main_keyboard(user_id=user_id, message_id=message_id, status="T")
    await query.bot.edit_message_text(text=MAIN_MESS + "\n\n–ë–æ—Ç –±—É–¥–µ—Ç —É–≤–µ–¥–æ–º–ª—è—Ç—å –æ –≤–∞—Å –æ –Ω–æ–≤—ã—Ö –ø—Ä–æ–µ–∫—Ç–∞—Ö!", chat_id=user_id, message_id=message_id, reply_markup=keyboard)

async def main_button(query: CallbackQuery):
    
    user_id = int(query.data.split("_")[1]) #–∫—Ç–æ –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É
    message_id = int(query.data.split("_")[2]) #id —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–Ω–æ–ø–∫–æ–π
    
    status = database.get_status(user_id=user_id)[0]

    keyboard = await keyboards.main_keyboard(user_id=user_id, message_id=message_id, status=status)

    await query.bot.edit_message_text(text=MAIN_MESS, chat_id=user_id, message_id=message_id, reply_markup=keyboard)

async def view_hyip_button(query: CallbackQuery):
    user_id = int(query.data.split("_")[1]) #–∫—Ç–æ –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É
    message_id = int(query.data.split("_")[2]) #id —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–Ω–æ–ø–∫–æ–π
    hyip_project_name = query.data.split("_")[3] #–∏–º—è –ø—Ä–æ–µ–∫—Ç–∞, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–∂–∞–ª–∏

    project = database.get_hyip_project(name=hyip_project_name)

    info = generate_hyip_info(project)

    keyboard = await keyboards.hyip(project[0][8], user_id=user_id, message_id=message_id)

    await query.bot.edit_message_text(text=info, chat_id=user_id, message_id=message_id, reply_markup=keyboard)
